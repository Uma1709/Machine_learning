{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "33d1f035",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import load_iris\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a68152d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>SepalLengthCm</th>\n",
       "      <th>SepalWidthCm</th>\n",
       "      <th>PetalLengthCm</th>\n",
       "      <th>PetalWidthCm</th>\n",
       "      <th>Species</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>146</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>147</td>\n",
       "      <td>6.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>148</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>149</td>\n",
       "      <td>6.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2.3</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>150</td>\n",
       "      <td>5.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  \\\n",
       "0      1            5.1           3.5            1.4           0.2   \n",
       "1      2            4.9           3.0            1.4           0.2   \n",
       "2      3            4.7           3.2            1.3           0.2   \n",
       "3      4            4.6           3.1            1.5           0.2   \n",
       "4      5            5.0           3.6            1.4           0.2   \n",
       "..   ...            ...           ...            ...           ...   \n",
       "145  146            6.7           3.0            5.2           2.3   \n",
       "146  147            6.3           2.5            5.0           1.9   \n",
       "147  148            6.5           3.0            5.2           2.0   \n",
       "148  149            6.2           3.4            5.4           2.3   \n",
       "149  150            5.9           3.0            5.1           1.8   \n",
       "\n",
       "            Species  \n",
       "0       Iris-setosa  \n",
       "1       Iris-setosa  \n",
       "2       Iris-setosa  \n",
       "3       Iris-setosa  \n",
       "4       Iris-setosa  \n",
       "..              ...  \n",
       "145  Iris-virginica  \n",
       "146  Iris-virginica  \n",
       "147  Iris-virginica  \n",
       "148  Iris-virginica  \n",
       "149  Iris-virginica  \n",
       "\n",
       "[150 rows x 6 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv(r'C:\\Users\\21ad058\\Desktop\\Iris.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "af751bd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = load_iris()\n",
    "X, y = df.data, df.target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3ff55276",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "81081816",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsClassifier(n_neighbors=3)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train the KNN model with k=3\n",
    "knn = KNeighborsClassifier(n_neighbors=3)\n",
    "knn.fit(X_train, y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c6868875",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\sklearn\\neighbors\\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n",
      "  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)\n"
     ]
    }
   ],
   "source": [
    "y_pred = knn.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fa0074b6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correct prediction: [6.1 2.8 4.7 1.2] is versicolor\n",
      "Correct prediction: [5.7 3.8 1.7 0.3] is setosa\n",
      "Correct prediction: [7.7 2.6 6.9 2.3] is virginica\n",
      "Correct prediction: [6.  2.9 4.5 1.5] is versicolor\n",
      "Correct prediction: [6.8 2.8 4.8 1.4] is versicolor\n",
      "Correct prediction: [5.4 3.4 1.5 0.4] is setosa\n",
      "Correct prediction: [5.6 2.9 3.6 1.3] is versicolor\n",
      "Correct prediction: [6.9 3.1 5.1 2.3] is virginica\n",
      "Correct prediction: [6.2 2.2 4.5 1.5] is versicolor\n",
      "Correct prediction: [5.8 2.7 3.9 1.2] is versicolor\n",
      "Correct prediction: [6.5 3.2 5.1 2. ] is virginica\n",
      "Correct prediction: [4.8 3.  1.4 0.1] is setosa\n",
      "Correct prediction: [5.5 3.5 1.3 0.2] is setosa\n",
      "Correct prediction: [4.9 3.1 1.5 0.1] is setosa\n",
      "Correct prediction: [5.1 3.8 1.5 0.3] is setosa\n",
      "Correct prediction: [6.3 3.3 4.7 1.6] is versicolor\n",
      "Correct prediction: [6.5 3.  5.8 2.2] is virginica\n",
      "Correct prediction: [5.6 2.5 3.9 1.1] is versicolor\n",
      "Correct prediction: [5.7 2.8 4.5 1.3] is versicolor\n",
      "Correct prediction: [6.4 2.8 5.6 2.2] is virginica\n",
      "Correct prediction: [4.7 3.2 1.6 0.2] is setosa\n",
      "Correct prediction: [6.1 3.  4.9 1.8] is virginica\n",
      "Correct prediction: [5.  3.4 1.6 0.4] is setosa\n",
      "Correct prediction: [6.4 2.8 5.6 2.1] is virginica\n",
      "Correct prediction: [7.9 3.8 6.4 2. ] is virginica\n",
      "Correct prediction: [6.7 3.  5.2 2.3] is virginica\n",
      "Correct prediction: [6.7 2.5 5.8 1.8] is virginica\n",
      "Correct prediction: [6.8 3.2 5.9 2.3] is virginica\n",
      "Correct prediction: [4.8 3.  1.4 0.3] is setosa\n",
      "Correct prediction: [4.8 3.1 1.6 0.2] is setosa\n",
      "Correct prediction: [4.6 3.6 1.  0.2] is setosa\n",
      "Correct prediction: [5.7 4.4 1.5 0.4] is setosa\n",
      "Correct prediction: [6.7 3.1 4.4 1.4] is versicolor\n",
      "Correct prediction: [4.8 3.4 1.6 0.2] is setosa\n",
      "Correct prediction: [4.4 3.2 1.3 0.2] is setosa\n",
      "Correct prediction: [6.3 2.5 5.  1.9] is virginica\n",
      "Correct prediction: [6.4 3.2 4.5 1.5] is versicolor\n",
      "Correct prediction: [5.2 3.5 1.5 0.2] is setosa\n",
      "Correct prediction: [5.  3.6 1.4 0.2] is setosa\n",
      "Correct prediction: [5.2 4.1 1.5 0.1] is setosa\n",
      "Correct prediction: [5.8 2.7 5.1 1.9] is virginica\n",
      "Correct prediction: [6.  3.4 4.5 1.6] is versicolor\n",
      "Correct prediction: [6.7 3.1 4.7 1.5] is versicolor\n",
      "Correct prediction: [5.4 3.9 1.3 0.4] is setosa\n",
      "Correct prediction: [5.4 3.7 1.5 0.2] is setosa\n"
     ]
    }
   ],
   "source": [
    "# Print the correct and wrong predictions\n",
    "correct_predictions = 0\n",
    "wrong_predictions = 0\n",
    "for i in range(len(y_test)):\n",
    "    if y_test[i] == y_pred[i]:\n",
    "        print(f\"Correct prediction: {X_test[i]} is {iris.target_names[y_pred[i]]}\")\n",
    "        correct_predictions += 1\n",
    "    else:\n",
    "        print(f\"Wrong prediction: {X_test[i]} is {iris.target_names[y_pred[i]]} (actual: {iris.target_names[y_test[i]]})\")\n",
    "        wrong_predictions += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ac6afa33",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Accuracy: 1.00 (45 correct predictions, 0 wrong predictions)\n"
     ]
    }
   ],
   "source": [
    "accuracy = correct_predictions / len(y_test)\n",
    "print(f\"\\nAccuracy: {accuracy:.2f} ({correct_predictions} correct predictions, {wrong_predictions} wrong predictions)\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
